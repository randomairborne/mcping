name: Build container

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY_IMAGE: ghcr.io/randomairborne/mcping

permissions:
  packages: write
  contents: read

jobs:
  check:
    uses: ./.github/workflows/check.yml

  build:
    needs: [check]
    runs-on: ${{ matrix.platform.gha-image }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - docker: linux/amd64
            gha-image: ubuntu-24.04
            slug: x86_64
          - docker: linux/arm64
            gha-image: ubuntu-24.04-arm
            slug: aarch64
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform.docker }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.platform.slug }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create --tag ${{ env.REGISTRY_IMAGE }}:latest --tag ${{ env.REGISTRY_IMAGE }}:git-${{ github.sha }} $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

  image-test:
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-24.04, ubuntu-24.04-arm]
    services:
      mcping:
        image: ghcr.io/randomairborne/mcping:git-${{ github.sha }}
        env:
          CONTACT_EMAIL: valk+mcpingci@randomairborne.dev
          ROOT_URL: http://mcping:8080
        ports:
          - 8080:8080
    needs: merge
    steps:
      - run: curl --fail http://mcping:8080/

  deploy:
    needs: [image-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions-hub/kubectl@master
        env:
          KUBE_HOST: ${{ secrets.KUBE_HOST }}
          KUBE_CERTIFICATE: ${{ secrets.KUBE_CERTIFICATE }}
          KUBE_TOKEN: ${{ secrets.KUBE_TOKEN }}
        with:
          args: -n mcping set image deployment/mcping mcping=${{ env.REGISTRY_IMAGE }}:git-${{ github.sha }}
